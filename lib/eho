# lib/eho
# Functions to control the configuration and operation of the EHO service
# <do not include this template file in ``stack.sh``!>

# ``stack.sh`` calls the entry points in this order:
#
# install_eho
# configure_eho
# init_eho
# start_eho
# stop_eho
# cleanup_eho

# Save trace setting
XTRACE=$(set +o | grep xtrace)
set +o xtrace


# Defaults
# --------

# <define global variables here that belong to this project>

# Set up default directories
EHO_DIR=$DEST/eho

if [[ -d $EHO_DIR/bin ]]; then
    EHO_BIN_DIR=$EHO_DIR/bin
else
    EHO_BIN_DIR=$(get_python_exec_prefix)
fi

# Entry Points
# ------------

function cleanup_eho() {
    echo "EHO has been cleaned"
}

function configure_eho() {
    setup_develop $EHO_DIR

    EHO_SERVICE=$(keystone service-create \
                    --name=eho \
                    --type=mapreduce \
                    --description="MapReduce Service" \
                    | grep " id " | get_field 2)
    keystone endpoint-create \
        --region RegionOne \
        --service_id $EHO_SERVICE \
        --publicurl "http://$SERVICE_HOST:9000/" \
        --adminurl "http://$SERVICE_HOST:9000/" \
        --internalurl "http://$SERVICE_HOST:9000/"

    # configure eho to use mysql installation

    echo "# OPENSTACK CONF
OS_AUTH_PROTOCOL = 'http'
OS_AUTH_HOST = '127.0.0.1'
OS_AUTH_PORT = '35357'
OS_ADMIN_USER = 'admin'
OS_ADMIN_PASSWORD = 'swordfish'
OS_ADMIN_TENANT = 'admin'

# NODE CONF
NODE_USER = 'root'
NODE_PASSWORD = 'swordfish'
NODE_INTERNAL_NET = 'novanetwork'
" > $EHO_DIR/etc/local.cfg
}

function init_eho() {
    echo "init eho: here we should init db using eho-manage"
}

function install_eho() {
    git_clone $EHO_REPO $EHO_DIR $EHO_BRANCH $EHO_TAG
}

function start_eho() {
    screen_it eho "cd $EHO_DIR && $EHO_BIN_DIR/eho-api --reset-db \
        --stub-data --allow-cluster-ops --log-level DEBUG --port 9000"
}

function stop_horizon() {
    for serv in eho; do
        screen -S $SCREEN_NAME -p $serv -X kill
    done
}

# Restore xtrace
$XTRACE
